# the base URL for the tomcat installation 
# this is required since Java can't figure out the IP 
# address if there are multiple network interfaces
tomcat.url=http://localhost:8080

# parallel parameters
num.procs=1
mpi.run=/path/to/your/mpi

# zip up input/output files, if set to true
# data.archive=true

# location of working directory relative to $CATALINA_HOME/webapps.
# this could be a symbolic link to another location (which should be
# NFS mounted if this is on a cluster). if this is a symlink, copy
# etc/opal.xml to $CATALINA_HOME/conf/Catalina/localhost/opal.xml. if
# the name of the symlink is changed to something other than "opal-jobs", 
# modify the opal.xml accordingly
# working.dir=opal-jobs

# use this key to display how long to save user data on server
opal.datalifetime=4 days

# specify in seconds the hard limit for how long a job can run
# only applicable if either DRMAA or Globus is being used, and if
# the scheduler supports it
opal.hard_limit=3600

# full qualified class name (FQCN) of the job manager being used
opal.jobmanager=edu.sdsc.nbcr.opal.manager.ForkJobManager

## BEGIN: information for the DRMAA job manager
## ------------------------------------------------
# the parallel environment (PE) being used by DRMAA
drmaa.pe=mpich
## ------------------------------------------------
## END: information for the DRMAA job manager

## BEGIN: information for the Globus job managers
## ------------------------------------------------ 
# url for the globus gatekeeper
globus.gatekeeper=host:2119/jobmanager-sge

# gsi information 
globus.service_cert=/path/to/your/globus/cert
globus.service_privkey=/path/to/your/globus/key

# base url for gridftp server, used by remote Globus job manager
# make sure that this directory actually exists on remote server
# use "//" to indicate absolute path, else it is interpreted as relative
# to home directory
globus.gridftp_base=gsiftp://host:2811/working_dir
## ------------------------------------------------
## END: information for the Globus job manager
