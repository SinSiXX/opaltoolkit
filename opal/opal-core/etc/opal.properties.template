# the base URL for the tomcat installation 
# this is required since Java can't figure out the IP 
# address if there are multiple network interfaces
tomcat.url=http://localhost:8080

# parallel parameters
num.procs=1
mpi.run=/path/to/your/mpi

# zip up input/output files, if set to true
# data.archive=true

# location of working directory relative to $CATALINA_HOME/webapps.
# this could be a symbolic link to another location (which should be
# NFS mounted if this is on a cluster). if this is a symlink, copy
# etc/opal.xml to $CATALINA_HOME/conf/Catalina/localhost/opal.xml. if
# the name of the symlink is changed to something other than "opal-jobs", 
# modify the opal.xml accordingly. 
# working.dir=opal-jobs

# if you are using symlinks above, and they resolve to a different
# location on the head node as opposed to the compute nodes (depending
# on how NFS is set up), then set the following property to the path
# that is valid on the head node as well as the compute nodes
# absolute.path=/tmp/opal-jobs

# database information
database.use=false
database.url=jdbc:postgresql://localhost/opal_db
database.user=opal_user
database.passwd=opal_user

# drmma information
drmaa.use=false
drmaa.pe=mpich

# globus information, if drmaa is not being used
globus.use=false
globus.gatekeeper=ws.nbcr.net:2119/jobmanager-sge
globus.service_cert=/Users/sriramkrishnan/certs/opal_service.cert.pem
globus.service_privkey=/Users/sriramkrishnan/certs/opal_service.privkey


# use this key to display how long to save user data on server
opal.datalifetime=4 days


