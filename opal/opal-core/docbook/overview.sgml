<chapter id="overview" xreflabel="Overview">
<title>Overview</title>

<para>The Opal toolkit provides a mechanism to wrap up existing scientific
applications rapidly as Web services, and expose them to various clients.
The implementation provides features such as scheduling (e.g. using
Condor/SGE via Globus or DRMAA) and security (using GSI-based
certificates), Furthermore, the service provides job and data management
(by executing every job in a separate working directory), and state
management (by storing the service state in a PostgreSQL database). The
application developer specifies a configuration for a scientific
application and deploys the application as a service following a small
sequence of steps. End-users can now access this application remotely using
the WSDL of the service.</para>

<para>The WSDL for the service is defined inside <emphasis role="italics">wsdl/opal.wsdl</emphasis>. Stub
generators provided by Web service toolkits are then used to generate the
client and server-side bindings for the services. In our case, the services
are implemented in Java using the Apache Axis toolkit, while the clients
can be in any language.</para>

<para>The WSDL defines operations to do the following:</para>
<orderedlist>
   <listitem><para>Get application metadata (<filename>getAppMetadata</filename>): This returns
   metadata about the application. This includes usage information, along
   with any number of arbitrary application-specific metadata specified as
   an array of <filename>info</filename> elements, e.g. description of the various
   options that are passed to the application binary. Ideally, these
   elements should be arbitrary XML's (specified by <filename>xsd:any</filename> tags).
   However, due to the limitations of certains toolkits in other languages
   (e.g. ZSI in Python), we specify them as Strings for now. You may embed
   XML tags inside them using CDATA sections.</para></listitem>

   <listitem><para>Launch job (<filename>launchJob</filename>): This operation requires the list of
   arguments as a string, and an array of structures representing the input
   files. The structure contains the <emphasis role="italics">name</emphasis> of the input file and the
   <emphasis role="italics">contents</emphasis> in Base64 encoded binary form. The operation returns a
   Job ID that can be used to retrieve job status and outputs.</para></listitem>

   <listitem><para>Query job status (<filename>queryStatus</filename>): This operation expects a
   Job ID to query the status of a running job. A status code, message, and
   URL of the working directory for the job are returned.</para></listitem>

   <listitem><para>Get job outputs (<filename>getOutputs</filename>): This operation returns the
   outputs from a job that is identified by a Job ID. The output consists
   of the urls for the standard output and error, and an array of
   structures representing the output files. The structure contains the
   <emphasis role="italics">name</emphasis> of the output file and the <emphasis role="italics">url</emphasis> from where it can be
   downloaded.</para></listitem>

   <listitem><para>Get output file by name (<filename>getOutputAsBase64ByName</filename>): This
   operation returns the contents of an output file as Base64 binary. The
   input is a data structure that contains the Job ID for a particular job,
   and the name of the file to be retrieved.</para></listitem>

   <listitem><para>Destroy job (<filename>destroy</filename>): This operation destroys a running
   job identified by a Job ID.</para></listitem>

   <listitem><para>Launch blocking job (<filename>launchJobBlocking</filename>): This operation
   requires the list of arguments as a string, and an array of structures
   representing the input files. The structure contains the <emphasis role="italics">name</emphasis> of
   the input file and the <emphasis role="italics">contents</emphasis> in Base64 encoded binary form.
   The operation blocks until the remote execution is complete, and returns
   job outputs (as described above) as the response. This operation may
   only be appropriate for jobs that are not long running.</para></listitem>
</orderedlist>

<section id="Feedback" xreflabel="Feedback">
<title>Feedback</title>


<para>Please use the Opal Toolkit <ulink type="http"
url="http://sourceforge.net/tracker/?group_id=211778">Tracker</ulink> on
Sourceforge to report bugs and feature requests, and the NBCR Web Services
User Forum (<ulink type="http" url="https://nbcr.net/forum/viewforum.php?f=13">WSUF</ulink>)
for general comments and feedback.</para>

</section>


</chapter>
