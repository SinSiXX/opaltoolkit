<chapter id="scheduler" xreflabel="Scheduler Support Using Job Managers">
<title>Scheduler Support Using Job Managers</title>

<para>In this chapter, we describe how to configure Opal so that it can
submit jobs to an external scheduler, using the various job managers
provided. We also provide a brief introduction on how to write your own job
manager, if need be.</para>

<para>The prerequisite to this section is that you have a scheduler such as
Condor or SGE installed on your compute cluster. Please consult the
appropriate documentation for the respective installation. By default,
access to the schedulers is provided in one of two ways - using the DRMAA
API, or the Globus Toolkit. In practice, it is probably easier to set up
access via DRMAA if your scheduler supports the same.</para>

<para>Note that we do not stage input and output files from the Opal server
to the submit host if DRMAA is being used; hence, the machines should be on
a shared file system for DRMAA. Also note that Condor doesn't support
parallel execution using any recent version of MPI. If you plan to
configure parallel execution, use SGE instead.</para>

<section id="drmaa-scheduler" xreflabel="DRMAA Setup">
<title>DRMAA Setup</title>

<orderedlist>
<listitem><para>Ensure that your scheduler supports job submission via the DRMAA API.
Also ensure that <emphasis role="italics">libdrmaa.so</emphasis> is in your library path (by setting
 the LD_LIBRARY_PATH environment variable). We have only tested job
 submissions to SGE 6.x.</para></listitem>

<listitem><para>Set the following properties inside the opal.properties
file: <filename>opal.jobmanager</filename> to
<filename>edu.sdsc.nbcr.opal.manager.DRMAAJobManager</filename>, and
<filename>drmaa.pe</filename> to the name of the parallel environment (PE)
to be used to submit parallel jobs. You can ignore drmaa.pe if you do not
plan on supporting parallel jobs. </para></listitem>

<listitem><para>Reinstall Opal by running the following command:
<screen>
    ant install
</screen>
</para>
</listitem>

<listitem><para>Restart Tomcat for the changes to take effect.</para></listitem>

</orderedlist>
</section>

<section id="globus-scheduler" xreflabel="Globus Setup">
<title>Globus Setup</title>

<orderedlist>
<listitem><para>Install Globus (especially the Globus gatekeeper) on the head node of
the cluster. We use Globus GRAM to communicate programmatically with
Condor/SGE. To enable this, make sure that you have also installed the
Condor/SGE job-manager. Follow the documentation for this on the Globus web
site. You may install any version of Globus as long as you can submit jobs
to Condor/SGE via GRAM (and the Java CoG Kit). We use Globus version 3.2.0
on our cluster.</para>

<para>Ensure that you can submit jobs to Condor/SGE via Globus, especially
using the certificate/key-pair of the Tomcat server (described in  <xref linkend="security">
). You can do this by following these
steps:</para>

<orderedlist>
  <listitem><para>Copy app_service.cert.pem (the certificate file) to
  app_service.all.pem.</para></listitem>

  <listitem><para>Edit app_service.all.pem, and strip out everything excluding the
  region between the lines <filename>-----BEGIN CERTIFICATE-----</filename> and
  <filename>-----END CERTIFICATE-----</filename>. Leave those two lines in.</para></listitem>

  <listitem><para>Append the app_service.privkey (the unencrypted private key) to the
  contents of app_service.all.pem.</para></listitem>

  <listitem><para>Set the X509_USER_PROXY environment variable to the location of
  app_service.all.pem.</para></listitem>

  <listitem><para>Submit a test job using the above proxy to the Condor job-manager as
  follows: <filename>globus-job-run "hostname:2119/jobmanager-condor"
  "/bin/ls"</filename>. If you are using SGE, use
  <filename>"hostname:2119/jobmanager-sge"</filename>.</para>

  <para>If this above job succeeds, then Globus/Condor(SGE) can be used for
  scheduling purposes. You will have to add an entry into the grid-mapfile
  of the Globus installation (usually inside the /etc/grid-security
  directory) to authorize the service to launch jobs as follows:
  <filename>"/C=US/O=grid-devel/OU=sdsc/CN=app_service"
  app_user</filename>. Replace the value within quotes with the DN for the
  app_service.cert.pem. You can get the DN by running:
  <filename>grid-cert-info -subject -file app_service.cert.pem</filename>.
  The app_user is the Unix user running the Tomcat server hosting Opal.</para>

  <para>You may also have to add the CA cert and signing policy of the above
  certificate into the list of trusted certificates for the Globus
  installation (usually inside the /etc/grid-security/certificates
  directory).</para>

  <para>You may also want to check if you can submit parallel jobs via
  Globus. You can do so by running something like this: <filename>globusrun -o -r
  hostname:2119/jobmanager-sge
  "&amp;(executable=&lt;my_mpi_exec&gt;)(count=n)(jobtype=mpi)"</filename>. Replace
  <filename>&lt;my_mpi_exec&gt;</filename> with some valid MPI executable, and replace
  count with a valid number of processes for your executable</para></listitem>
</orderedlist>
</listitem>

<listitem><para>Set the following properties inside the opal.properties
file: <filename>globus.gatekeeper</filename> to the URL for the Globus
gatekeeper, <filename>globus.service_cert</filename> to the location of the
server certificate, and <filename>globus.service_privkey</filename> to the
location of the server's unencrypted private key.</para></listitem>

<listitem><para>If you would like to submit Globus jobs to a local cluster,
then set the property <filename>opal.jobmanager</filename> to
<filename>edu.sdsc.nbcr.opal.manager.GlobusJobManager</filename>, and if it
is to a remote cluster, then set it to
<filename>edu.sdsc.nbcr.opal.manager.RemoteGlobusJobManager</filename>. If
you are using the remote Globus job manager, set the
<filename>globus.gridftp_base</filename> to the base URL of the location to
stage files to. Make sure that this is a valid directory, and that the
app_user can write files can create directories in this location. It is
important to notice that if you specify a path with
gsiftp://myhost.mydomain.com:2812/data/foo.dat, the location 'data/foo.dat'
will be relative to the remote home directory. To point to absolute paths,
you have to use double slashes (//), e.g.
gsiftp://myhost.mydomain.com:2812//data/foo.dat.</para></listitem>

<listitem><para>Reinstall Opal by running the following command:
<screen>
    ant install
</screen>
</para>
</listitem>

<listitem><para>Restart Tomcat for the changes to take effect.</para></listitem>
</orderedlist>

</section>

<section id="jobmanager-howto" xreflabel="Writing Your Own Job Manager">
<title>Writing Your Own Job Manager</title>

<para>If the job managers provided by the Opal toolkit are not sufficient
for your purposes, you can write your own job managers to submit jobs to
your favorite scheduler. This section presents a brief tutorial on how to
do so.</para>

</section>
</chapter>

